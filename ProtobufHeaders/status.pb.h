/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_PROTOBUFMESSAGES_STATUS_PB_H_INCLUDED
#define PB_PROTOBUFMESSAGES_STATUS_PB_H_INCLUDED
#include "../modules/nanopb/pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _DeviceStatus {
    int32_t enumerated_status;
/* @@protoc_insertion_point(struct:DeviceStatus) */
} DeviceStatus;


/* Initializer values for message structs */
#define DeviceStatus_init_default                {0}
#define DeviceStatus_init_zero                   {0}

/* Field tags (for use in manual encoding/decoding) */
#define DeviceStatus_enumerated_status_tag       1

/* Struct field encoding specification for nanopb */
#define DeviceStatus_FIELDLIST(X, a) \
X(a, STATIC, REQUIRED, INT32, enumerated_status, 1)
#define DeviceStatus_CALLBACK NULL
#define DeviceStatus_DEFAULT NULL

extern const pb_msgdesc_t DeviceStatus_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define DeviceStatus_fields &DeviceStatus_msg

/* Maximum encoded size of messages (where known) */
#define DeviceStatus_size                        11

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
